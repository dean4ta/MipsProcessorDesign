Depth = 256;
Width = 32;
Address_radix = hex;
Data_radix = bin;
% Program RAM Data %					-- This program will test these instructions :
							-- lw, addu, and, xor, or, sub, multu, and j
Content
  Begin
00 : 10001100000100010000000000100100	;		-- 0x8c110024 lw $s1, 0x9($Zero)	 / 	load word in adress 0x9 + zero to s1	// s1/r17 = 4
01 : 10001100000100100000000000101000	;		-- 0x8c120028 lw $s2, 0xA($zero) 	 / 	load word in adress 0xA 	// s2/r18 = 5
02 : 00000010001100101001100000100001	;		-- 0x02329821 addu $s3, $s1, $s2 	 / 	s3 = s1 + s2				// s3/r19 = 9
03 : 00000010010100111010000000100100	;		-- 0x0253a024 and $s4, $s2, $s3	 /	s4 = s2 and s3				// s4/r20 = 1
04 : 00000010011101001010100000100110	;		-- 0x0274a826 xor $s5, $s3, $s4	 / 	s5 = s3 xor s4				// s5/r21 = 8
05 : 00000010011100011011000000100101	;		-- 0x0271b025 or  $s6, $s3, $s1     / 	s6 = s3 or  s1				// s6/r22 = D
06 : 00000010110101001011100000100011	;		-- 0x02d4b823 sub $s7, $s6, $s4     /      s7 = s6 - s4				// s7/r23 = C
07 : 00000010011100100000000000011001	;		-- 0x02720019 multu $s3, $s2	 /  	Lo = s3 * s2				// LO = 2D
08 : 00001000000000000000000000001000	;		-- 0x08000008 j  8		 / 	infinite loop
09 : 00000000000000000000000000000100	;		-- 0x00000004 4
0A : 00000000000000000000000000000101	;		-- 0x00000005 5


End;